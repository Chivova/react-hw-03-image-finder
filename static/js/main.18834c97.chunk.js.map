{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.jsx","api/img-api.jsx","components/Modal/Modal.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/SearchInfo/SearchInfo.jsx","App.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","state","query","handleSearchQuery","e","value","currentTarget","setState","handleSubmit","preventDefault","imageQuery","trim","props","onSubmit","toast","warn","position","autoClose","this","className","s","searchbar","searchForm","type","searchFormButton","searchFormButtonLabel","onChange","searchFormInput","autoComplete","autoFocus","placeholder","Component","BASE_URL","API_KEY","imgApi","fetchImgApi","page","axios","get","then","r","data","hits","catch","error","request","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","largeImageURL","tags","createPortal","overlay","onClick","modal","src","alt","ImageGalleryItem","showModal","toggleModal","webformatURL","imageGalleryItem","imageGalleryItemImage","ImageGallery","gallery","imageGallery","map","id","Button","button","SearchInfo","loading","updatePage","scroll","scrollTo","top","documentElement","scrollHeight","behavior","prevProps","prevState","prevQuery","nextQuery","prevPage","nextPage","length","finally","color","height","width","App","handleFormSubmit","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.18834c97.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGalleryItem\":\"ImageGalleryItem_imageGalleryItem__g8NZ6\",\"imageGalleryItemImage\":\"ImageGalleryItem_imageGalleryItemImage__3vXEs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__1DYni\",\"modal\":\"Modal_modal__vO0XV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGallery\":\"ImageGallery_imageGallery__1iKqk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__bQWkq\"};","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport s from './Searchbar.module.css';\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    query: '',\r\n  };\r\n\r\n  handleSearchQuery = e => {\r\n    const { value } = e.currentTarget;\r\n\r\n    this.setState({ query: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const imageQuery = this.state.query;\r\n\r\n    if (imageQuery.trim() === '') {\r\n      toast.warn('ðŸ¦„ Ð¡heck if the input is correct!', {\r\n        position: 'top-right',\r\n        autoClose: 3000,\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    this.props.onSubmit(imageQuery);\r\n    this.setState({ query: '' });\r\n  };\r\n\r\n  render() {\r\n    const { query } = this.state;\r\n\r\n    return (\r\n      <header className={s.searchbar}>\r\n        <form onSubmit={this.handleSubmit} className={s.searchForm}>\r\n          <button type=\"submit\" className={s.searchFormButton}>\r\n            <span className={s.searchFormButtonLabel}>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            onChange={this.handleSearchQuery}\r\n            className={s.searchFormInput}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={query}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar;\r\n","import axios from 'axios';\r\n\r\nconst BASE_URL = 'https://pixabay.com/api';\r\nconst API_KEY = '21510937-25dddef59cfdf7f1b5603f7e9';\r\n\r\nconst fetchImgApi = (query, page = 1) => {\r\n  return axios\r\n    .get(\r\n      `${BASE_URL}/?q=${query}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n    )\r\n    .then(r => r.data.hits)\r\n    .catch(error => error.request);\r\n};\r\n\r\nconst imgApi = {\r\n  fetchImgApi,\r\n};\r\nexport default imgApi;\r\n","import { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport s from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = e => {\r\n    if (e.target === e.currentTarget) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { largeImageURL, tags } = this.props;\r\n\r\n    return createPortal(\r\n      <div className={s.overlay} onClick={this.handleBackdropClick}>\r\n        <div className={s.modal}>\r\n          <img src={largeImageURL} alt={tags} />\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ImageGalleryItem.module.css';\r\n\r\nimport Modal from '../Modal';\r\n\r\nclass ImageGalleryItem extends Component {\r\n  state = {\r\n    showModal: false,\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState(({ showModal }) => ({\r\n      showModal: !showModal,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { webformatURL, largeImageURL, tags } = this.props;\r\n\r\n    return (\r\n      <li className={s.imageGalleryItem}>\r\n        <img\r\n          onClick={this.toggleModal}\r\n          src={webformatURL}\r\n          alt={tags}\r\n          className={s.imageGalleryItemImage}\r\n        />\r\n        {this.state.showModal && (\r\n          <Modal\r\n            largeImageURL={largeImageURL}\r\n            tags={tags}\r\n            onClose={this.toggleModal}\r\n          />\r\n        )}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n};\r\nexport default ImageGalleryItem;\r\n","import ImageGalleryItem from '../ImageGalleryItem';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ImageGallery.module.css';\r\n\r\nconst ImageGallery = ({ gallery }) => {\r\n  return (\r\n    <ul className={s.imageGallery}>\r\n      {gallery.map(({ id, webformatURL, largeImageURL, tags }) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          webformatURL={webformatURL}\r\n          largeImageURL={largeImageURL}\r\n          tags={tags}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  gallery: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      webformatURL: PropTypes.string,\r\n      largeImageURL: PropTypes.string,\r\n      tags: PropTypes.string,\r\n    }),\r\n  ).isRequired,\r\n};\r\nexport default ImageGallery;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Button.module.css';\r\n\r\nconst Button = ({ onClick }) => (\r\n  <button className={s.button} onClick={onClick} type=\"button\">\r\n    Load More\r\n  </button>\r\n);\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\nexport default Button;\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nimport imgApi from '../../api/img-api';\r\nimport ImageGallery from '../ImageGallery';\r\nimport Button from '../Button';\r\n\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nclass SearchInfo extends Component {\r\n  state = {\r\n    gallery: [],\r\n    page: 1,\r\n    loading: false,\r\n    error: null,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const prevQuery = prevProps.imageQuery;\r\n    const nextQuery = this.props.imageQuery;\r\n    const prevPage = prevState.page;\r\n    const nextPage = this.state.page;\r\n\r\n    if (prevQuery !== nextQuery) {\r\n      this.setState({ gallery: [], page: 1, loading: true, error: null });\r\n\r\n      imgApi\r\n        .fetchImgApi(nextQuery)\r\n        .then(gallery => {\r\n          if (gallery.length === 0) {\r\n            this.setState({\r\n              error: `No images found on your request ${nextQuery}`,\r\n            });\r\n          }\r\n          this.setState({\r\n            gallery,\r\n          });\r\n        })\r\n        .finally(() => this.setState({ loading: false }));\r\n    }\r\n\r\n    if (prevPage < nextPage) {\r\n      this.setState({ loading: true });\r\n      imgApi\r\n        .fetchImgApi(nextQuery, nextPage)\r\n        .then(gallery => {\r\n          this.setState(prevState => ({\r\n            gallery: [...prevState.gallery, ...gallery],\r\n          }));\r\n        })\r\n        .finally(() => {\r\n          this.scroll();\r\n          this.setState({ loading: false });\r\n        });\r\n    }\r\n  }\r\n\r\n  updatePage = () => {\r\n    this.setState(({ page }) => ({\r\n      page: page + 1,\r\n    }));\r\n  };\r\n\r\n  scroll = () => {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { gallery, error, loading } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {error && <h2>{error}</h2>}\r\n        <ImageGallery gallery={gallery} />\r\n        {loading && (\r\n          <Loader type=\"Puff\" color=\"#00BFFF\" height={50} width={50} />\r\n        )}\r\n        {gallery.length > 1 && <Button onClick={this.updatePage} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nSearchInfo.propTypes = {\r\n  imageQuery: PropTypes.string.isRequired,\r\n};\r\nexport default SearchInfo;\r\n","import { Component, Fragment } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport Searchbar from './components/Searchbar';\r\nimport SearchInfo from './components/SearchInfo';\r\n\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    imageQuery: '',\r\n  };\r\n\r\n  handleFormSubmit = imageQuery => {\r\n    this.setState({ imageQuery });\r\n  };\r\n\r\n  render() {\r\n    const { imageQuery } = this.state;\r\n\r\n    return (\r\n      <Fragment>\r\n        <ToastContainer />\r\n        <Searchbar onSubmit={this.handleFormSubmit} />\r\n        <SearchInfo imageQuery={imageQuery} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__2971M\",\"searchForm\":\"Searchbar_searchForm__dmDlL\",\"searchFormButton\":\"Searchbar_searchFormButton__2byND\",\"searchFormButtonLabel\":\"Searchbar_searchFormButtonLabel__hU7Dy\",\"searchFormInput\":\"Searchbar_searchFormInput__A2ZLh\"};"],"sourceRoot":""}